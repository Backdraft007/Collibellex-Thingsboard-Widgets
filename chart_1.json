{
  "alias": "chart_1",
  "name": "Chart 1",
  "descriptor": {
    "type": "timeseries",
    "sizeX": 9.5,
    "sizeY": 7.5,
    "resources": [
      {
        "url": "https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"
      },
      {
        "url": "https://cdnjs.cloudflare.com/ajax/libs/chartist/0.11.4/chartist.min.js"
      },
      {
        "url": "https://cdn.jsdelivr.net/chartist.js/latest/chartist.min.css"
      },
      {
        "url": "https://cdn.jsdelivr.net/npm/chartist-plugin-zoom@0.6.0/dist/chartist-plugin-zoom.min.js"
      },
      {
        "url": "https://unpkg.com/chartist-plugin-tooltips@0.0.17/dist/chartist-plugin-tooltip.js"
      },
      {
        "url": "https://sre-solutions.com/static/tb-widget/chartist-plugin-tooltip.css"
      }
    ],
    "templateHtml": "<div class=\"ct-chart\"></div>",
    "templateCss": "#container {\n    \n    --strokecolor1: yellow;\n    --strokecolor2: red;\n    --strokecolor3: green;\n    --strokecolor4: blue;\n    --strokecolor5: cyan;\n    --strokecolor6: purple;\n    --strokecolor7: red;\n    --strokecolor8: black;\n    --strokecolor9: yellow;\n    --strokecolor10: black;\n    --strokewidth1: 3px;\n    --strokewidth2: 3px;\n    --strokewidth3: 3px;\n    --strokewidth4: 3px;\n    --strokewidth5: 3px;\n    --strokewidth6: 3px;\n    --strokewidth7: 3px;\n    --strokewidth8: 3px;\n    --strokewidth9: 3px;\n    --strokewidth10: 3px;\n    --fill1: none;\n    --fill2: none;\n    --fill3: none;\n    --fill4: none;\n    --fill5: none;\n    --fill6: none;\n    --fill7: none;\n    --fill8: none;\n    --fill9: none;\n    --fill10: none;\n    --pointcolor1: transparent;\n    --pointcolor2: transparent;\n    --pointcolor3: transparent;\n    --pointcolor4: transparent;\n    --pointcolor5: transparent;\n    --pointcolor6: transparent;\n    --pointcolor7: transparent;\n    --pointcolor8: transparent;\n    --pointcolor9: transparent;\n    --pointcolor10: transparent;\n}\n\n\n.ct-series-a .ct-line  {\n  stroke: var(--strokecolor1);\n  stroke-width: var(--strokewidth1);\n}\n\n.ct-series-b .ct-line  {\n  stroke: var(--strokecolor2);\n  stroke-width: var(--strokewidth2);\n}\n\n.ct-series-c .ct-line  {\n  stroke: var(--strokecolor3);\n  stroke-width: var(--strokewidth3);\n}\n\n.ct-series-d .ct-line  {\n  stroke: var(--strokecolor4);\n  stroke-width: var(--strokewidth4);\n}\n\n.ct-series-e .ct-line  {\n  stroke: var(--strokecolor5);\n  stroke-width: var(--strokewidth5);\n}\n\n.ct-series-f .ct-line  {\n  stroke: var(--strokecolor6);\n  stroke-width: var(--strokewidth6);\n}\n\n.ct-series-g .ct-line  {\n  stroke: var(--strokecolor7);\n  stroke-width: var(--strokewidth7);\n}\n\n.ct-series-h .ct-line  {\n  stroke: var(--strokecolor8);\n  stroke-width: var(--strokewidth8);\n}\n\n.ct-series-i .ct-line  {\n  stroke: var(--strokecolor9);\n  stroke-width: var(--strokewidth9);\n}\n\n.ct-series-j .ct-line  {\n  stroke: var(--strokecolor10);\n  stroke-width: var(--strokewidth10);\n}\n\n.ct-series-a .ct-area {\n    fill:  var(--fill1);\n}\n\n.ct-series-b .ct-area {\n    fill:  var(--fill2);\n}\n\n.ct-series-c .ct-area {\n    fill:  var(--fill3);\n}\n\n.ct-series-d .ct-area {\n    fill:  var(--fill4);\n}\n\n.ct-series-e .ct-area {\n    fill:  var(--fill5);\n}\n\n.ct-series-f .ct-area {\n    fill:  var(--fill6);\n}\n\n.ct-series-g .ct-area {\n    fill:  var(--fill7);\n}\n\n.ct-series-h .ct-area {\n    fill:  var(--fill8);\n}\n\n.ct-series-i .ct-area {\n    fill:  var(--fill9);\n}\n\n.ct-series-j .ct-area {\n    fill:  var(--fill10);\n}\n\n.ct-zoom-rect {\n  fill: rgba(200, 100, 100, 0.3);\n  stroke: red;\n}\n\n.chartist-tooltip {\n  opacity: 0;\n  position: absolute;\n  margin: 20px 0 0 10px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #FFF;\n  padding: 5px 10px;\n  border-radius: 4px;\n}\n\n.ct-series-a .ct-point {\n        stroke: var(--pointcolor1)\n    }\n.ct-series-b .ct-point {\n        stroke: var(--pointcolor2)\n    }\n.ct-series-c .ct-point {\n        stroke: var(--pointcolor3)\n    }\n.ct-series-d .ct-point {\n        stroke: var(--pointcolor4)\n    }\n.ct-series-e .ct-point {\n        stroke: var(--pointcolor5)\n    }\n.ct-series-f .ct-point {\n        stroke: var(--pointcolor6)\n    }\n.ct-series-g .ct-point {\n        stroke: var(--pointcolor7)\n    }\n.ct-series-h .ct-point {\n        stroke: var(--pointcolor8)\n    }\n.ct-series-i .ct-point {\n        stroke: var(--pointcolor9)\n    }\n.ct-series-j .ct-point {\n        stroke: var(--pointcolor10)\n    }\n\n\n",
    "controllerScript": "var chart;\nvar stopUpdateHover = false;\nvar stopUpdateZoom = false;\nvar oneShot = false;\nself.onInit = function() {\n    console.log(self.ctx)\n    var settings = self.ctx.settings;\n    chart = new Chartist.Line($('.ct-chart', self.ctx.$container)[0], {\n        colors:[\"yellow\", \"#222\", \"#111\", \"#000\"],\n  series: [\n    {\n      name: 'series-1',\n      data: [\n        {x: new Date(143134652600), y: 53},\n        {x: new Date(143234652600), y: 40},\n        {x: new Date(143340052600), y: 45},\n        {x: new Date(143366652600), y: 40},\n        {x: new Date(143410652600), y: 20},\n        {x: new Date(143508652600), y: 32},\n        {x: new Date(143569652600), y: 18},\n        {x: new Date(143579652600), y: 11}\n      ]\n    },\n    {\n      name: 'series-2',\n      data: [\n        {x: new Date(143134652600), y: 53},\n        {x: new Date(143234652600), y: 35},\n        {x: new Date(143334652600), y: 30},\n        {x: new Date(143384652600), y: 30},\n        {x: new Date(143568652600), y: 10}\n      ]\n    }\n  ]\n}, {\n  axisX: {\n    type: Chartist.FixedScaleAxis,\n    divisor: 5,\n    labelInterpolationFnc: function(value) {\n      return moment(value).format('DD MMM, h:mm:ss');\n    }\n  },showPoint: true,\n  fullWidth: true,\n  showArea: true,\n  plugins: [\n    Chartist.plugins.zoom({ onZoom: onZoom }),\n    Chartist.plugins.tooltip({\n  transformTooltipTextFnc: function(tooltip) {\n    var xy = tooltip.split(\",\");\n    return xy[1];\n  }\n})\n  ]\n}\n);\nconsole.log(chart);\nfunction onZoom(chart, reset) {\n    \n  resetFnc = reset;\n  stopUpdateZoom = true;\n}\n\n$('.ct-chart', self.ctx.$container).hover(inFunction,outFunction)\n\nfunction inFunction() {\n  stopUpdateHover = true;\n}\n\nfunction outFunction() {\n  stopUpdateHover = false;\n}\n\nself.ctx.$container.contextmenu(function() {\n  resetFnc && resetFnc();\n  stopUpdateZoom = false;\n  return false;\n});\n\nfor (var i=0; i < self.ctx.data.length; i++) {\n    var dataKey = self.ctx.data[i].dataKey;\n    var settings = self.ctx.data[i].dataKey.settings;\n    var stroke = dataKey.color;\n    var property = '--strokecolor'+(i+1).toString();\n    \n    self.ctx.$container[0].style.setProperty(property, stroke);\n    \n    if (settings.fillChart === true)\n    {\n        property = '--fill'+(i+1).toString();\n        self.ctx.$container[0].style.setProperty(property, settings.fillColor);\n    }\n    \n    if (self.ctx.settings.showDataPoints)\n    {\n        property = '--pointcolor'+(i+1).toString();\n        self.ctx.$container[0].style.setProperty(property, dataKey.color);\n    }\n}\n    \n    //myElement.style.setProperty('--color', 'white')\n    //$(\".ct-chart\", \".ct-chart-line\")[0].style.stroke = 'blue';\n    \nself.onResize();\n\n}\n\nself.onDataUpdated = function() {\n    if (!stopUpdateHover && !stopUpdateZoom)\n    {\n    var series = Array();\n    for (var i = 0; i < self.ctx.data.length; i++) {\n        var datasourceData = self.ctx.data[i];\n        var dataSet = datasourceData.data;\n        var seriesElement = {\n                    name: self.ctx.data[i].dataKey.label,\n                    data: [],\n                }\n        for (var d = 0; d < dataSet.length; d++) {\n            var tsValuePair = dataSet[d];\n            var ts = tsValuePair[0];\n            var value = tsValuePair[1];\n            \n            seriesElement.data.push({x: new Date(ts), y: value});\n        }\n        \n        series.push(seriesElement);\n\n    }\n        \n        chart.data.series = series;\n        chart.update(chart);\n    }\n        \n\n}\n\nself.onResize = function() {\n   $('.ct-chart', self.ctx.$container)[0].style.height = self.ctx.height + \"px\";\n\n}\n\nself.onEditModeChanged = function() {\n   \n}\n\nself.onMobileModeChanged = function() {\n    \n}\n\nself.getSettingsSchema = function() {\n    \n}\n\nself.getDataKeySettingsSchema = function() {\n    \n}\n\nself.onDestroy = function() {\n    \n}\n",
    "settingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Settings\",\n        \"properties\": {\n            \"showDataPoints\": {\n                \"title\": \"Show Data points\",\n                \"type\": \"boolean\",\n                \"default\": false\n            }\n            \n        }\n        },\n    \"form\": [\n        \"showDataPoints\"\n    ]\n}",
    "dataKeySettingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"DataKeySettings\",\n        \"properties\": {\n            \n            \"fillColor\": {\n                \"title\": \"Fill Color\",\n                \"type\": \"string\",\n                \"default\": \"#008a00\"\n            },\n            \"fillChart\": {\n                \"title\": \"fill Chart\",\n                \"type\": \"boolean\",\n                \"default\": false\n            },\n        \n        \"required\": [\n                    ]\n        }\n        },\n    \"form\": [\n        \"fillChart\",\n        {\n            \"key\": \"fillColor\",\n            \"type\": \"color\"\n        }\n    ]\n}",
    "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"entityAliasId\":null,\"filterId\":null,\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"First\",\"color\":\"#2196f3\",\"settings\":{\"fillColor\":\"#8a0000\",\"fillChart\":true},\"_hash\":0.8587686344902596,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\",\"units\":null,\"decimals\":null,\"usePostProcessing\":null,\"postFuncBody\":null},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Second\",\"color\":\"#071aff\",\"settings\":{\"fillColor\":\"#0c3efb\",\"fillChart\":true},\"_hash\":0.12775350966079668,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\",\"units\":null,\"decimals\":null,\"usePostProcessing\":null,\"postFuncBody\":null}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"showDataPoints\":false},\"title\":\"Chart 1\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"mobileHeight\":null,\"useDashboardTimewindow\":true}"
  }
}