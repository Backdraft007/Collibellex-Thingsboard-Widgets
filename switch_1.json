{
  "alias": "switch_1",
  "name": "Switch 1",
  "descriptor": {
    "type": "rpc",
    "sizeX": 13,
    "sizeY": 8,
    "resources": [
      {
        "url": "//sre-solutions.com/static/tb-widget/on-off-switch.css"
      },
      {
        "url": "//sre-solutions.com/static/tb-widget/on-off-switch.js"
      },
      {
        "url": "//sre-solutions.com/static/tb-widget/on-off-switch-onload.js"
      }
    ],
    "templateHtml": "<div class=\"checkbox-container\">\r\n\r\n\r\n    <input type=\"checkbox\" name=\"on-off-switch\" id=\"on-off-switch\" checked=\"\">\r\n</div>",
    "templateCss": ".on-off-switch\n{\n    top: 50%;\n     transform: translate(-50%, -50%);\n    position: absolute;\n  left: 50%;\n}",
    "controllerScript": "var namespace;\nvar cssParser = new cssjs();\nvar dg;\n\nself.onInit = function() {\n    var settings = self.ctx.settings;\n        dg = new DG.OnOffSwitch({\n            el: '#on-off-switch',\n            height: settings.height || 150,\n            trackColorOn:settings.backgroundcolorOn || \"#F57C00\",\n            trackColorOff:settings.backgroundcolorOff || \"#666\",\n            trackBorderColor:'#555',\n            textColorOff:settings.textColorOff || \"#fff\",\n            textColorOn:settings.textColorOn || \"#fff\",\n            textOn:settings.textOn || \"ON\",\n            textOff:settings.textOff || \"OFF\",\n            listener:function(name, checked){\n            \n        var method = settings.changeRequestMethod || 'setValue';\n        var paramsBody = convertStatus(checked).toString();\n        console.log(method);\n        console.log(paramsBody);\n       \n        self.ctx.controlApi.sendTwoWayCommand(method, \n                                    paramsBody, settings.requestTimeout)\n                    .subscribe(\n                        function success(responseBody) {\n                            \n                        }\n                    );\n            \n            \n            \n            \n        }\n        });\n        \n        \n    var convertStatusChangeMethod = settings.convertStatusChangeMethod || \"return value;\";\n    \n    var convertStatus = new Function(\"value\", convertStatusChangeMethod);\n    \n    \n    function requestStatus() {\n        method = settings.statusRequestMethod;\n        paramsBody = \"\";\n        self.ctx.controlApi.sendTwoWayCommand(method, \n                            paramsBody, \n                            settings.requestTimeout)\n            .subscribe(\n                function success(responseBody) {\n                       let value = ( parseInt(responseBody));    \n                       if (value > 0)\n                       {\n                       $('#on-off-switch', self.ctx.$container).checked = true;\n                       $('#on-off-switch', self.ctx.$container).value = true;\n                       dg.checked = true;\n                       \n                       }\n                        else\n                        {\n                        \n                        $('#on-off-switch', self.ctx.$container).checked = false;\n                        $('#on-off-switch', self.ctx.$container).click();\n                        \n                        \n                        }\n                        console.log(dg)\n                    }\n                    );\n                }\n                \n   \n                \n\n    requestStatus()\n    \n}\n    \n\n\n\nself.onResize = function() {\n    console.log(dg.checked);\n  //  $('#on-off-switch', self.ctx.$container)[0].style.marginLeft = self.ctx.width - $('.checkbox-container', self.ctx.$container)[0].offsetWidth + \"px\";\n  \n}\n\nself.onDestroy = function() {\n}\n",
    "settingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Settings\",\n        \"properties\": {\n            \"requestTimeout\": {\n                \"title\": \"RPC request timeout\",\n                \"type\": \"number\",\n                \"default\": 500\n            },\n            \"changeRequestMethod\": {\n                \"title\": \"RPC set value method\",\n                \"type\": \"string\",\n                \"default\": \"setValue\"\n            },\n            \"statusRequestMethod\": {\n                \"title\": \"RPC get value method\",\n                \"type\": \"string\",\n                \"default\": \"getValue\"\n            },\n            \"backgroundcolorOn\": {\n                \"title\": \"Background Color On\",\n                \"type\": \"string\",\n                \"default\": \"#F57C00\"\n            },\n            \"backgroundcolorOff\": {\n                \"title\": \"Background Color Off\",\n                \"type\": \"string\",\n                \"default\": \"#666\"\n            },\n            \"textColorOn\": {\n                \"title\": \"Text Color On\",\n                \"type\": \"string\",\n                \"default\": \"#fff\"\n            },\n            \"textColorOff\": {\n                \"title\": \"Text Color Off\",\n                \"type\": \"string\",\n                \"default\": \"#fff\"\n            },\n            \"height\": {\n                \"title\": \"Height in px\",\n                \"type\": \"number\",\n                \"default\": 150\n            },\n            \"textOn\": {\n                \"title\": \"Text ON\",\n                \"type\": \"string\",\n                \"default\": \"ON\"\n            },\n            \"textOff\": {\n                \"title\": \"Text OFF\",\n                \"type\": \"string\",\n                \"default\": \"OFF\"\n            },\n            \"convertStatusChangeMethod\": {\n                \"title\": \"Convert value function, f(value), returns payload used by RPC set value method\",\n                \"type\": \"string\",\n                \"default\": \"return value;\"\n            } \n        },\n        \"required\": [ \n                     \"requestTimeout\",\n                     \"changeRequestMethod\",\n                     \"statusRequestMethod\",\n                     \"convertStatusChangeMethod\",\n                     \"backgroundcolorOn\",\n                     \"backgroundcolorOff\",\n                     \"textColorOn\",\n                     \"textColorOff\",\n                     \"height\",\n                     \"textOn\",\n                     \"textOn\"]\n    },\n    \"form\": [\n        \"requestTimeout\",\n        \"changeRequestMethod\",\n        \"statusRequestMethod\",\n        {\n            \"key\": \"convertStatusChangeMethod\",\n            \"type\": \"javascript\"\n        },\n        {\n            \"key\": \"backgroundcolorOn\",\n            \"type\": \"color\"\n        },{\n            \"key\": \"backgroundcolorOff\",\n            \"type\": \"color\"\n        },{\n            \"key\": \"textColorOn\",\n            \"type\": \"color\"\n        },{\n            \"key\": \"textColorOff\",\n            \"type\": \"color\"\n        },\n        \"height\",\n        \"textOn\",\n        \"textOff\"\n            ]\n        \n    \n}",
    "dataKeySettingsSchema": "{}\n",
    "defaultConfig": "{\"targetDeviceAliases\":[],\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"0px\",\"settings\":{\"parseGpioStatusFunction\":\"return body[pin] === true;\",\"gpioStatusChangeRequest\":{\"method\":\"setGpioStatus\",\"paramsBody\":\"{\\n   \\\"pin\\\": \\\"{$pin}\\\",\\n   \\\"enabled\\\": \\\"{$enabled}\\\"\\n}\"},\"requestTimeout\":500,\"switchPanelBackgroundColor\":\"#b71c1c\",\"gpioStatusRequest\":{\"method\":\"getGpioStatus\",\"paramsBody\":\"{}\"},\"gpioList\":[{\"pin\":1,\"label\":\"GPIO 1\",\"row\":0,\"col\":0,\"_uniqueKey\":0},{\"pin\":2,\"label\":\"GPIO 2\",\"row\":0,\"col\":1,\"_uniqueKey\":1},{\"pin\":3,\"label\":\"GPIO 3\",\"row\":1,\"col\":0,\"_uniqueKey\":2}]},\"title\":\"Switch 1\"}"
  },
  "image": null,
  "description": null
}